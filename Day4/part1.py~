with open('data.txt', 'r') as f: lines = f.read()
with open('test1.txt', 'r') as test1: test1data = test1.read()
with open('test2.txt', 'r') as test2: test2data = test2.read()

expected_fields = [
    'byr', 'iyr',
    'eyr', 'hgt',
    'hcl', 'ecl',
    'pid'
]

#optional_fields = [
#    'byr', 'iyr',
#    'eyr', 'hgt',
#    'hcl', 'ecl',
#    'pid', 'cid'
#]

#test1ValidPassports = validate_passports(test1data)
#print('test 1 has %(test1ValidPassports) valid passports but should have 8')
#test2ValidPassports = validate_passports(test2data)

# passport = {}
def validate_passports(lines):
    passports = lines.split('\n\n')

    valid_passports = 0

    for passport in passports:
        passport_keys = []
        clean_pass = passport.replace('\n', ' ').split(' ')
        clean_pass = [i for i in clean_pass if i]
        print(clean_pass)
    
        for pass_data in clean_pass:
            key, _ = pass_data.split(':')
            passport_keys.append(key)
        if set(expected_fields).issubset(set(passport_keys)):
            valid_passports += 1

    print(valid_passports)
    return valid_passports

validate_passports(lines)
#test1ValidPassports = validate_passports(test1data)
#print('test 1 has %d valid passports but should have 8'%(test1ValidPassports))
#test2ValidPassports = validate_passports(test2data)



#for line in lines.split('\n\n'):
    

#for line in lines:
    #if line == '\n':
        #print(passport)
        #passport = {}
    #else:
        #print(line)
        #data = line.split(' ')
        #for d in data:
            #key, value = d.split(':')
            #passport[key] = value
#print(lines)
#DATA_SPLIT_KEY = 'DATA_SPLIT_KEY'
#passport = {}

#lines = lines.replace('\n\n', DATA_SPLIT_KEY).replace('\n', ' ')
#data = lines.split(DATA_SPLIT_KEY)

#for d in data:
    


#print(lines.split(DATA_SPLIT_KEY))
#for line in lines
